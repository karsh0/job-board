
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String @id @default(cuid())
  name              String
  password          String?
  avatar            String?
  isVerified        Boolean @default(false)
  role              Role    @default(USER)
  email             String    @unique
  skills            String[]
  experience        Experience[]
  project           Project[]
  resume            String?
  education         Education[]
  resumeUpdateDate  DateTime?
  companyId         String?        @unique
  company           Company?       @relation(fields: [companyId], references: [id])
}

model Company {
  id           String  @id @default(cuid())
  companyName  String
  companyLogo  String?
  companyEmail String
  companyBio   String
  user         User?
}

model Job {
  id                 String          @id @default(cuid())
  userId             String
  title              String
  description        String?
  companyName        String          @map("company_name")
  companyEmail       String          @map("company_email")
  category           String
  type               EmployementType
  workMode           WorkMode        @map("work_mode")
  currency           Currency        @default(INR)
  city               String
  address            String
  postedAt           DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  // user               User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Experience {
  id                Int             @id @default(autoincrement())
  companyName       String
  designation       String
  EmploymentType    EmployementType
  currentWorkStatus Boolean
  userId            String
  user              User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Education {
  id                Int             @id @default(autoincrement())
  instituteName     String
  degree            DegreeType
  fieldOfStudy      FieldOfStudyType
  startDate         DateTime
  endDate           DateTime?
  userId            String
  user              User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id               Int          @id @default(autoincrement())
  projectName      String
  projectThumbnail String?
  projectGithub    String?
  userId           String
  user             User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}


enum Currency {
  INR
  USD
}

enum WorkMode {
  remote
  hybrid
  office
}

enum Role {
  USER
  ADMIN
  HR
}

enum EmployementType {
  Full_time
  Part_time
  Internship
  Contract
}

enum DegreeType {
  BTech
  MTech
  BCA
  MCA
}

enum FieldOfStudyType {
  AI
  Machine_Learning
  CS
  Mechanical
}